#!/usr/bin/env ruby
# frozen_string_literal: true
# vim: filetype=ruby

lib = File.expand_path('lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require "#{File.dirname(__FILE__)}/../req/sheltered-girl"

# zinbeijett loads.
module Zinbeijett
  module_function

  def version
    puts '[ version ]'.center(60, '-')
    puts ''
    print 'Sheltered-girl VERSION : '
    puts EngineLeft.version
    puts ''
    puts '[ version ]'.center(60, '-')
  end

  def start
    puts ''
    puts 'Start'.center(60, '-')

    puts <<-DOC
    == Contributing to sheltered-girl

    GitHub account  : takkii

    ** Spectacle **

    Improve zinbeiw find function to work on the command line.

    ** version info **

    search match method use,

    =~ operator  : 0.x.x

    match method : 1.x.x

    minimum core : 2.x.x

    zinbeijett core : 3.x.x

    sheltered-girl version : 4.x.x

    > Thank you for reading to the last.
    DOC

    puts 'Start'.center(60, '-')
    puts ''
  end

  def licen
    puts ''
    puts 'License'.center(60, '-')
    puts <<-HOW

    The MIT License

    Copyright (c) 2013 - #{(DateTime.now.year).to_s} Takayuki Kamiyama

    Permission is hereby granted, free of charge,
    to any person obtaining a copy of this software and
    associated documentation files (the [Software]),
    to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify,
    merge, publish, distribute, sublicense,
    and/or sell copies of the Software,
    and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:

    The above copyright notice and
    this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED [AS IS],
    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR
    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    HOW

    puts ''
    puts 'License'.center(60, '-')
    puts ''
  end

  def help
    puts ''
    puts 'Command'.center(60, '-')

    puts <<-HELP

    [tweet]
    aqua -l → tweet
    Twitter_tubuyaki tools.

    [speak]

    Now version is zinbeiw (= 1.4.3.1) clone.

    Plus amaoto function.

    [tenji]

    Convert Romaji to Tenji.

    tenji [alphabet] [alphabet] .. 10 case

    tenji A I U E O

    ---output---
    o-
    --
    --
    o-
    o-
    --
    oo
    --
    --
    oo
    o-
    --
    -o
    o-
    --
    ---output---

    [romaji]

    Convert Tenji to Romaji.

    romaji [tenji convert in filename.txt]

    <Example>

    romaji log/tenji_a.txt

    [tenji_log]

    10 case, alpha beta ... kappa

    log/tenji_*.txt write Tenji.

    tenji_log [alphabet] [alphabet] .. 10 case

    [katakana]

    Convert Tenji to Katakana.

    katakana [katakana convert in filename.txt]

    <Example>

    tenji_log A

    katakana tenji_a.txt

    ア

    [zinbeijett]

    zinbeijett [ option ]

    -s,start           Start page!

    -v,version         Version information!

    -l,license         License information!

    [aqua]

    < how to use >

    aqua [ option ] [ File name ] [ String or regular expression ]

    < Example >

    $ aqua druby://localhost:8888
    druby process server.
    aqua -d server output.

    $ aqua -a notojima.txt wajima
    AND Search.

    $ aqua -b https://takkii.github.io/feed.xml
    Display summary, GitHub Pages for takkii.

    $ aqua -c
    Calendar views. Today now.

    $ aqua -d druby://localhost:8888
    druby process server output.
    ※ console "can't parse uri:-d (DRb::DRbBadURI)"
    → The output disappeared by catching the exception.

    $ aqua -e
    Tubuyaki clone ver. zinbeijett.

    $ aqua -f 2007 09
    Calendar views, select year and month.

    $ aqua -g
    print GC.stat, Garbage collection info output.

    $ aqua -h [百人一首(one word)]
    Search the full text from the first 百人一首.

    $ aqua -i
    Tubuyaki GUI CLONE, Log write version.

    $ aqua -j https://github.com/takkii.atom
    aqua -j https://visualstudiomagazine.com/rss-feeds/blogs.aspx

    [ Example ]

    Display GitHub Active for atom.
    Display visualstudio magazine blogs for aspx.

    ※ Display title only.

    $ aqua -k notojima.txt wajima
    match method all search, log/output.txt write.

    $ aqua -l
    Use Pycall, Roll the dice.

    $ aqua -m notojima.txt
    mail search. pattern match is mailaddress word only.

    $ aqua -n notojima.txt wajima
    NOT Search.

    $ aqua -o notojima.txt wajima notojima
    OR search. use two words.

    $ aqua -p notojima.txt wajima
    line number : Applicable number, outputs.

    $ aqua -q string1 string2
    ruby convert encript use openssl.
    sha cript use case password.

    $ aqua -r https://takkii.github.io/feed.xml
    Display Title, GitHub Pages for takkii.

    $ aqua -s notojima.txt notojima
    String count search. String count in File.

    $ aqua -t notojima.txt wajima
    match method search. ( = all search )

    $ aqua -u
    Twitter User, Tweet TIMELINE list output.

    $ aqua -w notojima.txt
    rice is keitaiso analyse

    $ aqua -x notojima.txt
    kome is wakati writer and wordcount.

    $ aqua -y notojima.txt
    suihan is wakati writer.

    $ aqua -z notojima.txt wajima
    Full-text search.

    HELP

    puts 'Command'.center(60, '-')
    puts ''
  end

  def soft
    puts RUBY_DESCRIPTION
    print 'On Zinbeijett Engine VERSION : '
    puts EngineLeft.version
  end
end

include Zinbeijett

v = /\Aversion|\A-v\z/
h = /\Alicense|\A-l\z/
s = /\Astart|\A-s\z/
c = /\Ahelp|\A-h\z/

one = ARGV[0]

if one.nil?
  soft
elsif one.match?(v)
  version
elsif one.match?(h)
  licen
elsif one.match?(s)
  start
elsif one.match?(c)
  help
else
  puts 'Please choose an option.'
end

GC.start

__END__

