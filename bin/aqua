#!/usr/bin/env ruby
# frozen_string_literal: true
# vim: filetype=ruby

lib = File.expand_path('lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require "#{File.dirname(__FILE__)}/../req/aqua"

# Class in sheltered-girl
class EngineLeft

  def self.search_txt
    require 'all'
    All.search
  end

  def self.search_txi
    require 'and'
    And.search
  end

  def self.search_txe
    require 'not'
    Not.search
  end

  def self.search_txs
    require 'or'
    Or.search
  end

  def self.search_gc
    require 'gc'
    Star.search
  end

  def self.search_druby_erb
    require 'druby_erb'
    Druby.new.main
  end

  def self.druby_server
    require 'druby_reci'
  end

  def self.search_mail
    require 'mail'
    Mail.search
  end

  def self.count_search
    require 'count'
    Count.search
  end

  def self.calendar_view
    require 'calendar'
    Calendar.view
    puts ''
  end

  def self.auto_view
    require 'autocal'
    Auto.view
    puts ''
  end

  def self.hyaku_view
    require 'hyaku'
    Hyaku.view
    puts ''
  end

  def self.mini_view
    require 'mini'
    Mini.search
    puts ''
  end

  def self.match_view
    require 'match'
    Mat.search
    puts ''
  end

  def self.title_rss
    require 'title'
    Title.new.views
  end

  def self.feed_xml
    require 'feed'
    puts ' Feed Start '.center(60, '-')
    Feed.new.jira
    puts ' Feed End '.center(60, '-')
  end

  def self.summa_xml
    require 'summa.rb'
    puts ' Summary Start '.center(60, '-')
    Feed.new.jira
    puts ' Summary end '.center(60, '-')
  end

  def self.version_info
    require 'version'
    puts '[ version ]'.center(60, '-')
    puts ''
    puts 'Aqua VERSION : ' + EngineLeft.version
    puts ''
    puts '[ version ]'.center(60, '-')
  end

  def self.rice_keitaiso
    require 'rice'
  end

  def self.suihan_wakati
    require 'suihan'
  end

  def self.kome_wakati
    require 'kome'
  end

  def self.tubuyaki_jett
    require 'tubuyaki'
  end

  def self.tubuyaki_log
    require 'tubuyaki_memo'
  end

  def self.match_log
    require 'all_log'
    Mat.search
    puts ''
  end

  def self.decript_snowcat
    require 'decript'
    String_encrypt.new.use_case_hash
  end

  def self.tweet_cmd
    require 'tweet_cmd'
  end

  def self.saikoro_py
    require 'saikoro'
    Dice.new.saiko
  end
end

one = ARGV[0]

a = /\A[-][a]\z/
b = /\A[-][b]\z/
c = /\A[-][c]\z/
d = /\A[-][d]\z/
e = /\A[-][e]\z/
f = /\A[-][f]\z/
g = /\A[-][g]\z/
h = /\A[-][h]\z/
i = /\A[-][i]\z/
j = /\A[-][j]\z/
k = /\A[-][k]\z/
l = /\A[-][l]\z/
m = /\A[-][m]\z/
n = /\A[-][n]\z/
o = /\A[-][o]\z/
p = /\A[-][p]\z/
q = /\A[-][q]\z/
r = /\A[-][r]\z/
s = /\A[-][s]\z/
t = /\A[-][t]\z/
u = /\A[-][u]\z/
v = /\A[-][v]\z/
w = /\A[-][w]\z/
x = /\A[-][x]\z/
y = /\A[-][y]\z/
z = /\A[-][z]\z/

begin
  if one.nil?
    require 'druby_reci'
    EngineLeft.druby_server
  elsif one.match?(a)
    EngineLeft.search_txi
  elsif one.match?(b)
    EngineLeft.summa_xml
  elsif one.match?(c)
    EngineLeft.calendar_view
  elsif one.match?(d)
    EngineLeft.search_druby_erb
  elsif one.match?(e)
    EngineLeft.tubuyaki_jett
  elsif one.match?(f)
    EngineLeft.auto_view
  elsif one.match?(g)
    EngineLeft.search_gc
  elsif one.match?(h)
    EngineLeft.hyaku_view
  elsif one.match?(i)
    EngineLeft.tubuyaki_log
  elsif one.match?(j)
    EngineLeft.feed_xml
  elsif one.match?(k)
    EngineLeft.match_log
  elsif one.match?(l)
    EngineLeft.saikoro_py
  elsif one.match?(m)
    EngineLeft.search_mail
  elsif one.match?(n)
    EngineLeft.search_txe
  elsif one.match?(o)
    EngineLeft.search_txs
  elsif one.match?(p)
    EngineLeft.mini_view
  elsif one.match?(q)
    EngineLeft.decript_snowcat
  elsif one.match?(r)
    EngineLeft.title_rss
  elsif one.match?(s)
    EngineLeft.count_search
  elsif one.match?(t)
    EngineLeft.match_view
  elsif one.match?(u)
    EngineLeft.tweet_cmd
  elsif one.match?(v)
    EngineLeft.version_info
  elsif one.match?(w)
    EngineLeft.rice_keitaiso
  elsif one.match?(x)
    EngineLeft.kome_wakati
  elsif one.match?(y)
    EngineLeft.suihan_wakati
  elsif one.match?(z)
    EngineLeft.search_txt
  end
rescue Exception => e
  puts e.backtrace
ensure
  GC.compact
end

__END__